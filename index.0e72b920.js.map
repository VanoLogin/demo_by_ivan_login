{"mappings":"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","sources":["node_modules/ky/source/errors/HTTPError.ts","node_modules/ky/source/errors/TimeoutError.ts","node_modules/ky/source/utils/is.ts","node_modules/ky/source/utils/merge.ts","node_modules/ky/source/core/constants.ts","node_modules/ky/source/utils/normalize.ts","node_modules/ky/source/utils/timeout.ts","node_modules/ky/source/errors/DOMException.ts","node_modules/ky/source/utils/delay.ts","node_modules/ky/source/core/Ky.ts","node_modules/ky/source/index.ts","src/index.js"],"sourcesContent":["import type {NormalizedOptions} from '../types/options.js';\n\n// eslint-lint-disable-next-line @typescript-eslint/naming-convention\nexport class HTTPError extends Error {\n\tpublic response: Response;\n\tpublic request: Request;\n\tpublic options: NormalizedOptions;\n\n\tconstructor(response: Response, request: Request, options: NormalizedOptions) {\n\t\tconst code = (response.status || response.status === 0) ? response.status : '';\n\t\tconst title = response.statusText || '';\n\t\tconst status = `${code} ${title}`.trim();\n\t\tconst reason = status ? `status code ${status}` : 'an unknown error';\n\n\t\tsuper(`Request failed with ${reason}`);\n\n\t\tthis.name = 'HTTPError';\n\t\tthis.response = response;\n\t\tthis.request = request;\n\t\tthis.options = options;\n\t}\n}\n","export class TimeoutError extends Error {\n\tpublic request: Request;\n\n\tconstructor(request: Request) {\n\t\tsuper('Request timed out');\n\t\tthis.name = 'TimeoutError';\n\t\tthis.request = request;\n\t}\n}\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (value: unknown): value is object => value !== null && typeof value === 'object';\n","import type {KyHeadersInit, Options} from '../types/options.js';\nimport {isObject} from './is.js';\n\nexport const validateAndMerge = (...sources: Array<Partial<Options> | undefined>): Partial<Options> => {\n\tfor (const source of sources) {\n\t\tif ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n\t\t\tthrow new TypeError('The `options` argument must be an object');\n\t\t}\n\t}\n\n\treturn deepMerge({}, ...sources);\n};\n\nexport const mergeHeaders = (source1: KyHeadersInit = {}, source2: KyHeadersInit = {}) => {\n\tconst result = new globalThis.Headers(source1 as HeadersInit);\n\tconst isHeadersInstance = source2 instanceof globalThis.Headers;\n\tconst source = new globalThis.Headers(source2 as HeadersInit);\n\n\tfor (const [key, value] of source.entries()) {\n\t\tif ((isHeadersInstance && value === 'undefined') || value === undefined) {\n\t\t\tresult.delete(key);\n\t\t} else {\n\t\t\tresult.set(key, value);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n// TODO: Make this strongly-typed (no `any`).\nexport const deepMerge = <T>(...sources: Array<Partial<T> | undefined>): T => {\n\tlet returnValue: any = {};\n\tlet headers = {};\n\n\tfor (const source of sources) {\n\t\tif (Array.isArray(source)) {\n\t\t\tif (!Array.isArray(returnValue)) {\n\t\t\t\treturnValue = [];\n\t\t\t}\n\n\t\t\treturnValue = [...returnValue, ...source];\n\t\t} else if (isObject(source)) {\n\t\t\tfor (let [key, value] of Object.entries(source)) {\n\t\t\t\tif (isObject(value) && key in returnValue) {\n\t\t\t\t\tvalue = deepMerge(returnValue[key], value);\n\t\t\t\t}\n\n\t\t\t\treturnValue = {...returnValue, [key]: value};\n\t\t\t}\n\n\t\t\tif (isObject((source as any).headers)) {\n\t\t\t\theaders = mergeHeaders(headers, (source as any).headers);\n\t\t\t\treturnValue.headers = headers;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n","import type {Expect, Equal} from '@type-challenges/utils';\nimport {HttpMethod} from '../types/options.js';\n\nexport const supportsRequestStreams = (() => {\n\tlet duplexAccessed = false;\n\tlet hasContentType = false;\n\tconst supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n\tconst supportsRequest = typeof globalThis.Request === 'function';\n\n\tif (supportsReadableStream && supportsRequest) {\n\t\thasContentType = new globalThis.Request('https://a.com', {\n\t\t\tbody: new globalThis.ReadableStream(),\n\t\t\tmethod: 'POST',\n\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\tget duplex() {\n\t\t\t\tduplexAccessed = true;\n\t\t\t\treturn 'half';\n\t\t\t},\n\t\t}).headers.has('Content-Type');\n\t}\n\n\treturn duplexAccessed && !hasContentType;\n})();\n\nexport const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsResponseStreams = typeof globalThis.ReadableStream === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\n\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'] as const;\n\nconst validate = <T extends Array<true>>() => undefined as unknown as T;\nvalidate<[\n\tExpect<Equal<typeof requestMethods[number], HttpMethod>>,\n]>();\n\nexport const responseTypes = {\n\tjson: 'application/json',\n\ttext: 'text/*',\n\tformData: 'multipart/form-data',\n\tarrayBuffer: '*/*',\n\tblob: '*/*',\n} as const;\n\n// The maximum value of a 32bit int (see issue #117)\nexport const maxSafeTimeout = 2_147_483_647;\n\nexport const stop = Symbol('stop');\n","import {requestMethods} from '../core/constants.js';\nimport type {HttpMethod} from '../types/options.js';\nimport type {RetryOptions} from '../types/retry.js';\n\nexport const normalizeRequestMethod = (input: string): string =>\n\trequestMethods.includes(input as HttpMethod) ? input.toUpperCase() : input;\n\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\n\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\n\nconst retryAfterStatusCodes = [413, 429, 503];\n\nconst defaultRetryOptions: Required<RetryOptions> = {\n\tlimit: 2,\n\tmethods: retryMethods,\n\tstatusCodes: retryStatusCodes,\n\tafterStatusCodes: retryAfterStatusCodes,\n\tmaxRetryAfter: Number.POSITIVE_INFINITY,\n\tbackoffLimit: Number.POSITIVE_INFINITY,\n};\n\nexport const normalizeRetryOptions = (retry: number | RetryOptions = {}): Required<RetryOptions> => {\n\tif (typeof retry === 'number') {\n\t\treturn {\n\t\t\t...defaultRetryOptions,\n\t\t\tlimit: retry,\n\t\t};\n\t}\n\n\tif (retry.methods && !Array.isArray(retry.methods)) {\n\t\tthrow new Error('retry.methods must be an array');\n\t}\n\n\tif (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n\t\tthrow new Error('retry.statusCodes must be an array');\n\t}\n\n\treturn {\n\t\t...defaultRetryOptions,\n\t\t...retry,\n\t\tafterStatusCodes: retryAfterStatusCodes,\n\t};\n};\n","import {TimeoutError} from '../errors/TimeoutError.js';\n\nexport type TimeoutOptions = {\n\ttimeout: number;\n\tfetch: typeof fetch;\n};\n\n// `Promise.race()` workaround (#91)\nexport default async function timeout(\n\trequest: Request,\n\tabortController: AbortController | undefined,\n\toptions: TimeoutOptions,\n): Promise<Response> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tif (abortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError(request));\n\t\t}, options.timeout);\n\n\t\tvoid options\n\t\t\t.fetch(request)\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t});\n\t});\n}\n","// DOMException is supported on most modern browsers and Node.js 18+.\n// @see https://developer.mozilla.org/en-US/docs/Web/API/DOMException#browser_compatibility\nconst isDomExceptionSupported = Boolean(globalThis.DOMException);\n\n// TODO: When targeting Node.js 18, use `signal.throwIfAborted()` (https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted)\nexport function composeAbortError(signal?: AbortSignal) {\n\t/*\n\tNOTE: Use DomException with AbortError name as specified in MDN docs (https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort)\n\t> When abort() is called, the fetch() promise rejects with an Error of type DOMException, with name AbortError.\n\t*/\n\tif (isDomExceptionSupported) {\n\t\treturn new DOMException(signal?.reason ?? 'The operation was aborted.', 'AbortError');\n\t}\n\n\t// DOMException not supported. Fall back to use of error and override name.\n\tconst error = new Error(signal?.reason ?? 'The operation was aborted.');\n\terror.name = 'AbortError';\n\n\treturn error;\n}\n","// https://github.com/sindresorhus/delay/tree/ab98ae8dfcb38e1593286c94d934e70d14a4e111\n\nimport {composeAbortError} from '../errors/DOMException.js';\nimport {InternalOptions} from '../types/options.js';\n\nexport interface DelayOptions {\n\tsignal?: InternalOptions['signal'];\n}\n\nexport default async function delay(\n\tms: number,\n\t{signal}: DelayOptions,\n): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tif (signal) {\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(composeAbortError(signal));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', handleAbort, {once: true});\n\t\t}\n\n\t\tfunction handleAbort() {\n\t\t\treject(composeAbortError(signal!));\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tsignal?.removeEventListener('abort', handleAbort);\n\t\t\tresolve();\n\t\t}, ms);\n\t});\n}\n","import {HTTPError} from '../errors/HTTPError.js';\nimport {TimeoutError} from '../errors/TimeoutError.js';\nimport type {Hooks} from '../types/hooks.js';\nimport type {Input, InternalOptions, NormalizedOptions, Options, SearchParamsInit} from '../types/options.js';\nimport {ResponsePromise} from '../types/ResponsePromise.js';\nimport {deepMerge, mergeHeaders} from '../utils/merge.js';\nimport {normalizeRequestMethod, normalizeRetryOptions} from '../utils/normalize.js';\nimport timeout, {TimeoutOptions} from '../utils/timeout.js';\nimport delay from '../utils/delay.js';\nimport {ObjectEntries} from '../utils/types.js';\nimport {\n\tmaxSafeTimeout,\n\tresponseTypes,\n\tstop,\n\tsupportsAbortController,\n\tsupportsFormData,\n\tsupportsResponseStreams,\n\tsupportsRequestStreams,\n} from './constants.js';\n\nexport class Ky {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tstatic create(input: Input, options: Options): ResponsePromise {\n\t\tconst ky = new Ky(input, options);\n\n\t\tconst fn = async (): Promise<Response> => {\n\t\t\tif (ky._options.timeout > maxSafeTimeout) {\n\t\t\t\tthrow new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n\t\t\t}\n\n\t\t\t// Delay the fetch so that body method shortcuts can set the Accept header\n\t\t\tawait Promise.resolve();\n\t\t\tlet response = await ky._fetch();\n\n\t\t\tfor (const hook of ky._options.hooks.afterResponse) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst modifiedResponse = await hook(\n\t\t\t\t\tky.request,\n\t\t\t\t\tky._options as NormalizedOptions,\n\t\t\t\t\tky._decorateResponse(response.clone()),\n\t\t\t\t);\n\n\t\t\t\tif (modifiedResponse instanceof globalThis.Response) {\n\t\t\t\t\tresponse = modifiedResponse;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tky._decorateResponse(response);\n\n\t\t\tif (!response.ok && ky._options.throwHttpErrors) {\n\t\t\t\tlet error = new HTTPError(response, ky.request, (ky._options as unknown) as NormalizedOptions);\n\n\t\t\t\tfor (const hook of ky._options.hooks.beforeError) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\terror = await hook(error);\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// If `onDownloadProgress` is passed, it uses the stream API internally\n\t\t\t/* istanbul ignore next */\n\t\t\tif (ky._options.onDownloadProgress) {\n\t\t\t\tif (typeof ky._options.onDownloadProgress !== 'function') {\n\t\t\t\t\tthrow new TypeError('The `onDownloadProgress` option must be a function');\n\t\t\t\t}\n\n\t\t\t\tif (!supportsResponseStreams) {\n\t\t\t\t\tthrow new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\t\t\t\t}\n\n\t\t\t\treturn ky._stream(response.clone(), ky._options.onDownloadProgress);\n\t\t\t}\n\n\t\t\treturn response;\n\t\t};\n\n\t\tconst isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n\t\tconst result = (isRetriableMethod ? ky._retry(fn) : fn()) as ResponsePromise;\n\n\t\tfor (const [type, mimeType] of Object.entries(responseTypes) as ObjectEntries<typeof responseTypes>) {\n\t\t\tresult[type] = async () => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\t\tky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n\n\t\t\t\tconst awaitedResult = await result;\n\t\t\t\tconst response = awaitedResult.clone();\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tif (response.status === 204) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tconst arrayBuffer = await response.clone().arrayBuffer();\n\t\t\t\t\tconst responseSize = arrayBuffer.byteLength;\n\t\t\t\t\tif (responseSize === 0) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.parseJson) {\n\t\t\t\t\t\treturn options.parseJson(await response.text());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response[type]();\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic request: Request;\n\tprotected abortController?: AbortController;\n\tprotected _retryCount = 0;\n\tprotected _input: Input;\n\tprotected _options: InternalOptions;\n\n\t// eslint-disable-next-line complexity\n\tconstructor(input: Input, options: Options = {}) {\n\t\tthis._input = input;\n\t\tthis._options = {\n\t\t\t// TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n\t\t\tcredentials: (this._input as Request).credentials || 'same-origin',\n\t\t\t...options,\n\t\t\theaders: mergeHeaders((this._input as Request).headers, options.headers),\n\t\t\thooks: deepMerge<Required<Hooks>>(\n\t\t\t\t{\n\t\t\t\t\tbeforeRequest: [],\n\t\t\t\t\tbeforeRetry: [],\n\t\t\t\t\tbeforeError: [],\n\t\t\t\t\tafterResponse: [],\n\t\t\t\t},\n\t\t\t\toptions.hooks,\n\t\t\t),\n\t\t\tmethod: normalizeRequestMethod(options.method ?? (this._input as Request).method),\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\tprefixUrl: String(options.prefixUrl || ''),\n\t\t\tretry: normalizeRetryOptions(options.retry),\n\t\t\tthrowHttpErrors: options.throwHttpErrors !== false,\n\t\t\ttimeout: typeof options.timeout === 'undefined' ? 10_000 : options.timeout,\n\t\t\tfetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n\t\t};\n\n\t\tif (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n\t\t\tthrow new TypeError('`input` must be a string, URL, or Request');\n\t\t}\n\n\t\tif (this._options.prefixUrl && typeof this._input === 'string') {\n\t\t\tif (this._input.startsWith('/')) {\n\t\t\t\tthrow new Error('`input` must not begin with a slash when using `prefixUrl`');\n\t\t\t}\n\n\t\t\tif (!this._options.prefixUrl.endsWith('/')) {\n\t\t\t\tthis._options.prefixUrl += '/';\n\t\t\t}\n\n\t\t\tthis._input = this._options.prefixUrl + this._input;\n\t\t}\n\n\t\tif (supportsAbortController) {\n\t\t\tthis.abortController = new globalThis.AbortController();\n\t\t\tif (this._options.signal) {\n\t\t\t\tconst originalSignal = this._options.signal;\n\n\t\t\t\tthis._options.signal.addEventListener('abort', () => {\n\t\t\t\t\tthis.abortController!.abort(originalSignal.reason);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._options.signal = this.abortController.signal;\n\t\t}\n\n\t\tif (supportsRequestStreams) {\n\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\tthis._options.duplex = 'half';\n\t\t}\n\n\t\tthis.request = new globalThis.Request(this._input as RequestInfo, this._options as RequestInit);\n\n\t\tif (this._options.searchParams) {\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst textSearchParams = typeof this._options.searchParams === 'string'\n\t\t\t\t? this._options.searchParams.replace(/^\\?/, '')\n\t\t\t\t: new URLSearchParams(this._options.searchParams as unknown as SearchParamsInit).toString();\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst searchParams = '?' + textSearchParams;\n\t\t\tconst url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n\n\t\t\t// To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n\t\t\tif (\n\t\t\t\t((supportsFormData && this._options.body instanceof globalThis.FormData)\n\t\t\t\t\t|| this._options.body instanceof URLSearchParams) && !(this._options.headers && (this._options.headers as Record<string, string>)['content-type'])\n\t\t\t) {\n\t\t\t\tthis.request.headers.delete('content-type');\n\t\t\t}\n\n\t\t\t// The spread of `this.request` is required as otherwise it misses the `duplex` option for some reason and throws.\n\t\t\tthis.request = new globalThis.Request(new globalThis.Request(url, {...this.request}), this._options as RequestInit);\n\t\t}\n\n\t\tif (this._options.json !== undefined) {\n\t\t\tthis._options.body = JSON.stringify(this._options.json);\n\t\t\tthis.request.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n\t\t\tthis.request = new globalThis.Request(this.request, {body: this._options.body});\n\t\t}\n\t}\n\n\tprotected _calculateRetryDelay(error: unknown) {\n\t\tthis._retryCount++;\n\n\t\tif (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n\t\t\tif (error instanceof HTTPError) {\n\t\t\t\tif (!this._options.retry.statusCodes.includes(error.response.status)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tconst retryAfter = error.response.headers.get('Retry-After');\n\t\t\t\tif (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n\t\t\t\t\tlet after = Number(retryAfter);\n\t\t\t\t\tif (Number.isNaN(after)) {\n\t\t\t\t\t\tafter = Date.parse(retryAfter) - Date.now();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tafter *= 1000;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn after;\n\t\t\t\t}\n\n\t\t\t\tif (error.response.status === 413) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst BACKOFF_FACTOR = 0.3;\n\t\t\treturn Math.min(this._options.retry.backoffLimit, BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprotected _decorateResponse(response: Response): Response {\n\t\tif (this._options.parseJson) {\n\t\t\tresponse.json = async () => this._options.parseJson!(await response.text());\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprotected async _retry<T extends (...args: any) => Promise<any>>(fn: T): Promise<ReturnType<T> | void> {\n\t\ttry {\n\t\t\treturn await fn();\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-implicit-any-catch\n\t\t} catch (error) {\n\t\t\tconst ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n\t\t\tif (ms !== 0 && this._retryCount > 0) {\n\t\t\t\tawait delay(ms, {signal: this._options.signal});\n\n\t\t\t\tfor (const hook of this._options.hooks.beforeRetry) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tconst hookResult = await hook({\n\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\toptions: (this._options as unknown) as NormalizedOptions,\n\t\t\t\t\t\terror: error as Error,\n\t\t\t\t\t\tretryCount: this._retryCount,\n\t\t\t\t\t});\n\n\t\t\t\t\t// If `stop` is returned from the hook, the retry process is stopped\n\t\t\t\t\tif (hookResult === stop) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this._retry(fn);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprotected async _fetch(): Promise<Response> {\n\t\tfor (const hook of this._options.hooks.beforeRequest) {\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tconst result = await hook(this.request, (this._options as unknown) as NormalizedOptions);\n\n\t\t\tif (result instanceof Request) {\n\t\t\t\tthis.request = result;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (result instanceof Response) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tif (this._options.timeout === false) {\n\t\t\treturn this._options.fetch(this.request.clone());\n\t\t}\n\n\t\treturn timeout(this.request.clone(), this.abortController, this._options as TimeoutOptions);\n\t}\n\n\t/* istanbul ignore next */\n\tprotected _stream(response: Response, onDownloadProgress: Options['onDownloadProgress']) {\n\t\tconst totalBytes = Number(response.headers.get('content-length')) || 0;\n\t\tlet transferredBytes = 0;\n\n\t\tif (response.status === 204) {\n\t\t\tif (onDownloadProgress) {\n\t\t\t\tonDownloadProgress({percent: 1, totalBytes, transferredBytes}, new Uint8Array());\n\t\t\t}\n\n\t\t\treturn new globalThis.Response(\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\theaders: response.headers,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn new globalThis.Response(\n\t\t\tnew globalThis.ReadableStream({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tconst reader = response.body!.getReader();\n\n\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\tonDownloadProgress({percent: 0, transferredBytes: 0, totalBytes}, new Uint8Array());\n\t\t\t\t\t}\n\n\t\t\t\t\tasync function read() {\n\t\t\t\t\t\tconst {done, value} = await reader.read();\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\ttransferredBytes += value.byteLength;\n\t\t\t\t\t\t\tconst percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n\t\t\t\t\t\t\tonDownloadProgress({percent, transferredBytes, totalBytes}, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\tawait read();\n\t\t\t\t\t}\n\n\t\t\t\t\tawait read();\n\t\t\t\t},\n\t\t\t}),\n\t\t\t{\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: response.headers,\n\t\t\t},\n\t\t);\n\t}\n}\n","/*! MIT License © Sindre Sorhus */\n\nimport {Ky} from './core/Ky.js';\nimport {requestMethods, stop} from './core/constants.js';\nimport type {KyInstance} from './types/ky.js';\nimport type {Input, Options} from './types/options.js';\nimport {validateAndMerge} from './utils/merge.js';\nimport {Mutable} from './utils/types.js';\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport type {\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n} from './types/options.js';\n\nexport type {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tBeforeRetryState,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n} from './types/hooks.js';\n\nexport type {ResponsePromise} from './types/ResponsePromise.js';\nexport type {KyResponse} from './types/response.js';\nexport {HTTPError} from './errors/HTTPError.js';\nexport {TimeoutError} from './errors/TimeoutError.js';\n","// import ky from 'ky';\n\n// const button = document.querySelector('.button');\n// const buttonGet = document.querySelector('.button_get');\n// const buttonSubmit = document.querySelector('.button_submit');\n// const formSubmit = document.querySelector('.form_submit');\n// async function getAllTodos() {\n//   try {\n//     const todos = await ky\n//       .get('https://jsonplaceholder.typicode.com/todos')\n//       .json();\n//     console.log(todos);\n//   } catch (err) {\n//     console.log(err.message);\n//   }\n// }\n// async function addTodos() {\n//   const newTodo = {\n//     title: 'abc ',\n//     completed: false,\n//     userId: 1222,\n//   };\n//   try {\n//     const todos = await ky\n//       .post('https://jsonplaceholder.typicode.com/todos', { json: newTodo })\n//       .json();\n//     console.log(todos);\n//   } catch (err) {\n//     console.log(err.message);\n//   }\n// }\n\n// async function submitNewTodo(event) {\n//   event.preventDefault();\n//   const form = event.target;\n//   const formData = new FormData();\n//   formData.append('title', form.todo.value);\n//   formData.append('comleted', false);\n//   formData.append('userId', 1);\n//   try {\n//     const todos = await ky\n//       .post('https://jsonplaceholder.typicode.com/todos', { body: formData})\n//       .json();\n//     console.log(todos);\n//   } catch (err) {\n//     console.log(error.message);\n//   }\n// }\n\n// formSubmit.addEventListener('click', submitNewTodo);\n// buttonGet.addEventListener('click', addTodos);\n// button.addEventListener('click', getAllTodos);\nimport ky from 'ky';\n\nconst button = document.querySelector('.button');\nconst buttonGet = document.querySelector('.button_get');\nconst buttonSubmit = document.querySelector('.button_submit');\nconst formSubmit = document.querySelector('.form_submit');\n\nasync function getAllTodos() {\n  try {\n    const todos = await ky\n      .get('https://jsonplaceholder.typicode.com/todos')\n      .json();\n    console.log(todos);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nasync function addTodos() {\n  const newTodo = {\n    title: 'abc',\n    completed: false,\n    userId: 1222,\n  };\n  try {\n    const todos = await ky\n      .post('https://jsonplaceholder.typicode.com/todos', { json: newTodo })\n      .json();\n    console.log(todos);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nasync function submitNewTodo(event) {\n  event.preventDefault();\n  const form = event.target;\n  const formData = new FormData();\n  formData.append('title', form.todo.value);\n  formData.append('completed', false);\n  formData.append('userId', 1);\n  try {\n    const todos = await ky\n      .post('https://jsonplaceholder.typicode.com/todos', { body: formData })\n      .json();\n    console.log(todos);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nformSubmit.addEventListener('click', submitNewTodo);\nbuttonGet.addEventListener('click', addTodos);\nbutton.addEventListener('click', getAllTodos);\n"],"names":["$e5194c33f09c98c1$export$aa9d629c530f62a7","Error","constructor","response","request","options","status","statusText","trim","super","Object","defineProperty","this","name","$1c2c8ab814e178c3$export$66d311bf29d5c89c","$d818b2029133ed73$export$a6cdc56e425d0d0a","value","$36d3c37700a2d819$export$8886f5ba30bd5e0","sources","source","Array","isArray","TypeError","$36d3c37700a2d819$export$6969335ea1e4e77c","$36d3c37700a2d819$export$eee1781d075786ae","source1","source2","result","globalThis","Headers","isHeadersInstance","key","entries","undefined","delete","set","returnValue","headers","$63385fcee6f7fa9c$export$d8618555562b76b7","duplexAccessed","hasContentType","supportsReadableStream","ReadableStream","supportsRequest","Request","body","method","duplex","has","$63385fcee6f7fa9c$export$6c0aacaed85a4966","AbortController","$63385fcee6f7fa9c$export$135162ac70ac2b21","$63385fcee6f7fa9c$export$f1525fa7979d0aa9","FormData","$63385fcee6f7fa9c$export$fb003dbd6df95edb","$63385fcee6f7fa9c$export$a6f212d4ee888d8c","json","text","formData","arrayBuffer","blob","$63385fcee6f7fa9c$export$fa6813432f753b0d","Symbol","$7d72e14c89c69199$export$d585027d4667ffce","input","includes","toUpperCase","$7d72e14c89c69199$var$retryAfterStatusCodes","$7d72e14c89c69199$var$defaultRetryOptions","limit","methods","statusCodes","afterStatusCodes","maxRetryAfter","Number","POSITIVE_INFINITY","backoffLimit","$7d72e14c89c69199$export$3e5471bb9440c9c1","retry","async","$d331b33426f907b0$export$2e2bcd8739ae039","abortController","Promise","resolve","reject","timeoutId","setTimeout","abort","timeout","fetch","then","catch","clearTimeout","$13ec37731fff2f04$var$isDomExceptionSupported","Boolean","DOMException","$13ec37731fff2f04$export$1d0ea2027beb4847","signal","ref","ref1","reason","error","$fd081f618258b6b0$export$2e2bcd8739ae039","ms","aborted","addEventListener","handleAbort","once","removeEventListener","$c76a5be1a3b0d0b8$export$c482d6f00e170af3","static","ky","fn","_options","RangeError","_fetch","hook","hooks","afterResponse","modifiedResponse","_decorateResponse","clone","Response","ok","throwHttpErrors","beforeError","onDownloadProgress","_stream","toLowerCase","_retry","type","mimeType","get","byteLength","parseJson","_calculateRetryDelay","_retryCount","retryAfter","after","isNaN","Date","parse","now","BACKOFF_FACTOR","Math","min","beforeRetry","retryCount","beforeRequest","totalBytes","transferredBytes","percent","Uint8Array","controller","reader","getReader","read","done","close","enqueue","_method","_input","credentials","prefixUrl","String","bind","URL","startsWith","endsWith","originalSignal","searchParams","replace","URLSearchParams","toString","url","JSON","stringify","$89eeaa52fcd9b15c$var$createInstance","defaults","ky1","create","newDefaults","extend","stop","$89eeaa52fcd9b15c$export$2e2bcd8739ae039","$1f0dc3b9307be026$var$button","document","querySelector","$1f0dc3b9307be026$var$buttonGet","event","preventDefault","form","target","append","todo","todos","post","console","log","err","message","newTodo","title","completed","userId"],"version":3,"file":"index.0e72b920.js.map"}